cmake_minimum_required(VERSION 3.28)
project(Coding)

set(CMAKE_CXX_STANDARD 20)

add_executable(.z.base_mo .Library/mo.cpp)
add_executable(.z.base_.default_extended .Library/.default_extended.cpp)
add_executable(.z.base_bellman_ford .Library/bellman_ford.cpp)
add_executable(.z.base_convex_hull .Library/convex_hull.cpp)
add_executable(.z.base_coordinate_compression .Library/coordinate_compression.cpp)
add_executable(.z.base_dijkstra .Library/dijkstra.cpp)
add_executable(.z.base_floyd_warshell .Library/floyd_warshell.cpp)
add_executable(.z.base_glodminesegtree .Library/glodminesegtree.cpp)
add_executable(.z.base_iterative_segment_tree .Library/iterative_segment_tree.cpp)
add_executable(.z.base_knapsack .Library/knapsack.cpp)
add_executable(.z.base_lazyprop .Library/lazyprop.cpp)
add_executable(.z.base_lca-sparse_table .Library/lca-sparse_table.cpp)
add_executable(.z.base_line-intersection_ccw .Library/line-intersection_ccw.cpp)
add_executable(.z.base_miller_rabin .Library/miller_rabin.cpp)
add_executable(.z.base_minimum_spanning_tree .Library/minimum_spanning_tree.cpp)
add_executable(.z.base_pollard_rho .Library/pollard_rho.cpp)
add_executable(.z.base_recursive_segment_tree .Library/segment_tree.cpp)
add_executable(.z.base_scc .Library/scc.cpp)
add_executable(.z.base_trie .Library/trie.cpp)
add_executable(.z.base_sqrt_decomposition .Library/sqrt_decomposition.cpp)
add_executable(.z.base_union_find .Library/union_find.cpp)
add_executable(.z.base_flow .Library/flow.cpp)
add_executable(.z.base_.default .Library/.default.cpp)
add_executable(.z.base_mcmf .Library/mcmf.cpp)
add_executable(z.etc_dpython_dpython z.etc/dpython/dpython.cpp)
add_executable(z.etc_dpython_dpython.dpy z.etc/dpython/dpython.dpy.cpp)
add_executable(z.etc_dpython_dpymillerrabin.dpy z.etc/dpython/dpymillerrabin.dpy.cpp)
add_executable(z.etc_stack z.etc/stack.c)
add_executable(z.etc_test z.etc/test.cpp)
add_executable(z.etc_my_prob_snow z.etc/my_prob_snow.cpp)
add_executable(z.etc_my_prob_snow_testcase_gen z.etc/my_prob_snow_testcase_gen.cpp)
add_executable(z.etc_my_prob_snow_testcase_gen_2 z.etc/my_prob_snow_testcase_gen_2.cpp)
add_executable(z.etc_my_prob_snow_testcase_gen_3 z.etc/my_prob_snow_testcase_gen_3.cpp)
add_executable(RandE_dijkstra RandE/dijkstra.cpp)
add_executable(RandE_test RandE/test.cpp)
add_executable(RandE_astar RandE/astar.cpp)
add_executable(.z.base_bipartite_matching .Library/bipartite_matching.cpp)
add_executable(.Library_euler_tour_technique .Library/euler_tour_technique.cpp)
add_executable(.gitignored_Codeforces_950_a .contests/Codeforces_950/a.cpp)
add_executable(.gitignored_Codeforces_950_b .contests/Codeforces_950/b.cpp)
add_executable(.gitignored_Codeforces_950_c .contests/Codeforces_950/c.cpp)
add_executable(.gitignored_Codeforces_950_d .contests/Codeforces_950/d.cpp)
add_executable(.gitignored_Codeforces_950_e .contests/Codeforces_950/e.cpp)
add_executable(.Library_a_flow .Library/a_flow.cpp)
add_executable(.Library_a_segtree .Library/a_segtree.cpp)
add_executable(Baekjoon_g1_1275_segtree Baekjoon/gold/g1_1275_segtree.cpp)
add_executable(Baekjoon_g1_2268_segtree Baekjoon/gold/g1_2268_segtree.cpp)
add_executable(Baekjoon_g1_14438_segtree Baekjoon/gold/g1_14438_segtree.cpp)
add_executable(Baekjoon_g1_12837_segtree Baekjoon/gold/g1_12837_segtree.cpp)